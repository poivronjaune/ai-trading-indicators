[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "ai-trading-indicators"
version = "1.0.0"
description = "A Python library for processing financial time-series data and generating technical indicators using TA-Lib"
readme = "README.md"
license = {text = "MIT"}
authors = [
    {name = "Robert Boivin", email = "poivronjaune@gmail.com"}
]
maintainers = [
    {name = "Robert Boivin", email = "poivronjaune@gmail.com"}
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Financial and Insurance Industry",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Topic :: Office/Business :: Financial :: Investment",
    "Topic :: Scientific/Engineering :: Information Analysis",
    "Topic :: Software Development :: Libraries :: Python Modules",
]
keywords = [
    "technical-analysis", 
    "trading", 
    "indicators", 
    "finance", 
    "talib", 
    "stock-market",
    "financial-data",
    "time-series"
]
requires-python = ">=3.8"

# Core dependencies
dependencies = [
    "pandas>=1.5.0",
    "numpy>=1.20.0",
    "TA-Lib>=0.4.0",
]

# Optional dependencies for development and testing
[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "black>=22.0.0",
    "isort>=5.10.0",
    "flake8>=5.0.0",
    "mypy>=1.0.0",
    "pre-commit>=2.20.0",
]
test = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "pytest-mock>=3.10.0",
]
docs = [
    "sphinx>=5.0.0",
    "sphinx-rtd-theme>=1.2.0",
    "myst-parser>=0.18.0",
]

[project.urls]
"Homepage" = "https://github.com/robertboivin/ai-trading-indicators"
"Bug Reports" = "https://github.com/robertboivin/ai-trading-indicators/issues"
"Source" = "https://github.com/robertboivin/ai-trading-indicators"
"Documentation" = "https://github.com/robertboivin/ai-trading-indicators/docs"
"TA-Lib Wheels" = "https://github.com/cgohlke/talib-build"

# Script entry points
[project.scripts]
indicators = "ind.cli.interface:main"
ind-cli = "ind.cli.interface:main"

# Console scripts for package execution
[project.entry-points."console_scripts"]
indicators = "ind.cli.interface:main"

# Setuptools configuration
[tool.setuptools]
package-dir = {"" = "."}

[tool.setuptools.packages.find]
include = ["ind*"]
exclude = ["tests*", "docs*", "examples*"]

[tool.setuptools.package-data]
"ind.config" = ["*.toml", "*.yaml", "*.json"]

# Development tools configuration
[tool.black]
line-length = 88
target-version = ['py38', 'py39', 'py310', 'py311', 'py312']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["ind"]

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "talib.*",
    "pandas.*",
    "numpy.*"
]
ignore_missing_imports = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--strict-config",
    "--verbose",
    "--cov=ind",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-report=xml",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]

[tool.coverage.run]
source = ["ind"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/conftest.py",
    "*/__main__.py",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

[tool.flake8]
max-line-length = 88
extend-ignore = ["E203", "W503"]
exclude = [
    ".git",
    "__pycache__",
    "docs/source/conf.py",
    "old",
    "build",
    "dist",
    ".venv",
    ".eggs",
    "*.egg",
]